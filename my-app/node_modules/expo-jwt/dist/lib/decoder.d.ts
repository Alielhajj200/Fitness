import algorithms from './algorithms';
import { EncodingKey, JWTBody, JWTHeader, DecodingOptions, JWTToken } from '../types/jwt';
type AlgorithmFunction = (typeof algorithms)['HS256'];
declare class Decoder {
    _header: JWTHeader;
    _body: JWTBody;
    options: DecodingOptions;
    algorithm: 'none' | AlgorithmFunction;
    signature: string;
    constructor(key: EncodingKey);
    set header(header: string);
    set body(body: string);
    getAlgorithm(): any;
    verifySignature(encodedHeader: string, encodedBody: string): boolean;
    verifyClaims(): void;
    decodeAndVerify<T>(token: JWTToken, options?: DecodingOptions): JWTBody<T>;
}
export default Decoder;
